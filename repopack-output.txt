This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-11-07T18:56:20.223Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
CNAME
index.html
README.md
RESUME.MD

================================================================
Repository Files
================================================================

================
File: CNAME
================
hritikgandhi.com

================
File: index.html
================
<!DOCTYPE html>
<html>
<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
  <style>
    body {
      margin: 0;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      min-height: 100vh;
      background: linear-gradient(45deg, #1a1a1a, #2d2d2d);
      font-family: Arial, sans-serif;
    }
    
    #gameContainer {
      position: relative;
      margin: 20px 0;
    }
    
    canvas {
      border: 4px solid #fff;
      border-radius: 10px;
      box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
    }
    
    #score {
      position: absolute;
      top: -40px;
      width: 100%;
      text-align: center;
      color: #fff;
      font-size: 24px;
      text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
    }
    
    #controls {
      position: absolute;
      bottom: -40px;
      width: 100%;
      text-align: center;
      color: #fff;
      font-size: 16px;
    }

    .title {
      color: #fff;
      text-align: center;
      margin-bottom: 20px;
      text-shadow: 0 0 15px rgba(0, 255, 255, 0.7);
    }

    .title h1 {
      font-size: 48px;
      margin: 0;
      background: linear-gradient(45deg, #4479A1, #F7DF1E, #3776AB);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      animation: gradient 5s ease infinite;
    }

    .title h2 {
      font-size: 24px;
      margin: 10px 0;
      color: #aaa;
    }

    .social-links {
      margin-top: 60px;
      display: flex;
      gap: 20px;
      justify-content: center;
    }

    .social-links a {
      color: #fff;
      text-decoration: none;
      padding: 15px 25px;
      border-radius: 8px;
      background: rgba(255, 255, 255, 0.1);
      transition: all 0.3s ease;
      backdrop-filter: blur(5px);
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .social-links a:hover {
      background: rgba(255, 255, 255, 0.2);
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
    }

    .social-links i {
      font-size: 20px;
    }

    @keyframes gradient {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }
  </style>
</head>
<body>
  <div class="title">
    <h1>Hritik Gandhi</h1>
    <h2>Process Automation Specialist | Full Stack Developer</h2>
  </div>
  
  <div id="gameContainer">
    <div id="score">Score: <span id="scoreValue">0</span></div>
    <canvas id="gameCanvas" width="800" height="400"></canvas>
    <div id="controls">Use mouse or W/S keys to move the paddle</div>
  </div>

  <div class="social-links">
    <a href="mailto:hg@hritikgandhi.com" target="_blank">
      <i class="fas fa-envelope"></i>
      Email
    </a>
    <a href="https://linkedin.com/in/hritikgandhi" target="_blank">
      <i class="fab fa-linkedin"></i>
      LinkedIn
    </a>
    <a href="https://x.com/hritikkgandhi" target="_blank">
      <i class="fab fa-x-twitter"></i>
      Twitter
    </a>
  </div>

  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    const scoreElement = document.getElementById('scoreValue');

    // Skills from your resume
    const skills = [
      { name: 'JavaScript', color: '#F7DF1E' },
      { name: 'Python', color: '#3776AB' },
      { name: 'SQL', color: '#4479A1' },
      { name: 'VBA', color: '#217346' },
      { name: 'PowerBI', color: '#F2C811' },
      { name: 'TypeScript', color: '#007ACC' },
      { name: 'Git', color: '#F05032' }
    ];

    const state = {
      paddle: {
        x: 50,
        y: canvas.height / 2 - 50,
        width: 10,
        height: 100,
        speed: 8
      },
      ball: {
        x: canvas.width / 2,
        y: canvas.height / 2,
        radius: 10,
        speedX: -7,
        speedY: 7,
        currentSkill: skills[0]
      },
      score: 0,
      particles: []
    };

    function createParticles(x, y, color) {
      for (let i = 0; i < 10; i++) {
        state.particles.push({
          x,
          y,
          speedX: (Math.random() - 0.5) * 10,
          speedY: (Math.random() - 0.5) * 10,
          radius: Math.random() * 3 + 1,
          color,
          life: 1
        });
      }
    }

    function updateParticles() {
      for (let i = state.particles.length - 1; i >= 0; i--) {
        const particle = state.particles[i];
        particle.x += particle.speedX;
        particle.y += particle.speedY;
        particle.life -= 0.02;
        
        if (particle.life <= 0) {
          state.particles.splice(i, 1);
        }
      }
    }

    function drawParticles() {
      state.particles.forEach(particle => {
        ctx.beginPath();
        ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2);
        ctx.fillStyle = `rgba(${hexToRgb(particle.color).join(',')},${particle.life})`;
        ctx.fill();
      });
    }

    function hexToRgb(hex) {
      const result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
      return result ? [
        parseInt(result[1], 16),
        parseInt(result[2], 16),
        parseInt(result[3], 16)
      ] : [255, 255, 255];
    }

    function update() {
      // Ball movement
      state.ball.x += state.ball.speedX;
      state.ball.y += state.ball.speedY;

      // Ball collision with top and bottom
      if (state.ball.y + state.ball.radius > canvas.height || state.ball.y - state.ball.radius < 0) {
        state.ball.speedY *= -1;
        createParticles(state.ball.x, state.ball.y, state.ball.currentSkill.color);
      }

      // Ball collision with paddle
      if (state.ball.x - state.ball.radius < state.paddle.x + state.paddle.width &&
          state.ball.y > state.paddle.y &&
          state.ball.y < state.paddle.y + state.paddle.height &&
          state.ball.speedX < 0) {
        state.ball.speedX *= -1;
        state.score += 10;
        scoreElement.textContent = state.score;
        // Change skill
        state.ball.currentSkill = skills[Math.floor(Math.random() * skills.length)];
        createParticles(state.ball.x, state.ball.y, state.ball.currentSkill.color);
      }

      // Ball out of bounds
      if (state.ball.x + state.ball.radius < 0) {
        resetBall();
      }

      // Ball hits right wall
      if (state.ball.x + state.ball.radius > canvas.width) {
        state.ball.speedX *= -1;
        createParticles(state.ball.x, state.ball.y, state.ball.currentSkill.color);
      }

      updateParticles();
    }

    function draw() {
      // Clear canvas
      ctx.fillStyle = '#1a1a1a';
      ctx.fillRect(0, 0, canvas.width, canvas.height);

      // Draw paddle
      ctx.fillStyle = '#fff';
      ctx.fillRect(state.paddle.x, state.paddle.y, state.paddle.width, state.paddle.height);

      // Draw ball with current skill color
      ctx.beginPath();
      ctx.arc(state.ball.x, state.ball.y, state.ball.radius, 0, Math.PI * 2);
      ctx.fillStyle = state.ball.currentSkill.color;
      ctx.fill();

      // Draw skill name
      ctx.font = '20px Arial';
      ctx.fillStyle = state.ball.currentSkill.color;
      ctx.fillText(state.ball.currentSkill.name, canvas.width - 150, 30);

      // Draw particles
      drawParticles();
    }

    function resetBall() {
      state.ball.x = canvas.width / 2;
      state.ball.y = canvas.height / 2;
      state.ball.speedX = -7;
      state.ball.speedY = 7;
      state.score = Math.max(0, state.score - 50);
      scoreElement.textContent = state.score;
    }

    function gameLoop() {
      update();
      draw();
      requestAnimationFrame(gameLoop);
    }

    // Mouse movement
    canvas.addEventListener('mousemove', (e) => {
      const rect = canvas.getBoundingClientRect();
      const mouseY = e.clientY - rect.top;
      
      // Ensure paddle stays within canvas bounds
      if (mouseY >= state.paddle.height/2 && mouseY <= canvas.height - state.paddle.height/2) {
        state.paddle.y = mouseY - state.paddle.height/2;
      }
    });

    // Keyboard controls (as backup)
    const keys = new Set();
    
    document.addEventListener('keydown', (e) => {
      keys.add(e.key);
      if ((e.key === 'w' || e.key === 'ArrowUp') && state.paddle.y > 0) {
        state.paddle.y -= state.paddle.speed;
      }
      if ((e.key === 's' || e.key === 'ArrowDown') && state.paddle.y < canvas.height - state.paddle.height) {
        state.paddle.y += state.paddle.speed;
      }
    });

    document.addEventListener('keyup', (e) => {
      keys.delete(e.key);
    });

    // Start the game
    gameLoop();
  </script>
</body>
</html>

================
File: README.md
================
<h1 align="center">Hi 👋, I'm Hritik Gandhi</h1>
<h3 align="center">Process Automation Specialist | Full Stack Developer | PowerPlatform Expert</h3>

<p align="center">
  <img src="https://readme-typing-svg.herokuapp.com?font=Fira+Code&pause=1000&color=2980B9&center=true&width=435&lines=Process+Automation+Specialist;Full+Stack+Developer;PowerPlatform+Developer;Efficiency+Enthusiast" alt="Typing SVG" />
</p>

### 🤖 What I Do

I'm passionate about optimizing business processes and creating efficient automation solutions. My expertise lies in:
- 🔧 Developing PowerApps and PowerAutomate workflows
- 📊 Creating interactive PowerBI reports
- 🛠️ Implementing Knime workflows
- 💻 Building full-stack web applications
- 🗄️ Database design and optimization

### 🛠️ Tech Stack

<p align="left">
<img src="https://img.shields.io/badge/PowerApps-742774?style=for-the-badge&logo=powerapps&logoColor=white" alt="PowerApps"/>
<img src="https://img.shields.io/badge/PowerAutomate-0066FF?style=for-the-badge&logo=powerautomate&logoColor=white" alt="PowerAutomate"/>
<img src="https://img.shields.io/badge/PowerBI-F2C811?style=for-the-badge&logo=powerbi&logoColor=black" alt="PowerBI"/>
<img src="https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=javascript&logoColor=black" alt="JavaScript"/>
<img src="https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white" alt="Python"/>
<img src="https://img.shields.io/badge/TypeScript-007ACC?style=for-the-badge&logo=typescript&logoColor=white" alt="TypeScript"/>
<img src="https://img.shields.io/badge/SQL-4479A1?style=for-the-badge&logo=mysql&logoColor=white" alt="SQL"/>
<img src="https://img.shields.io/badge/Git-F05032?style=for-the-badge&logo=git&logoColor=white" alt="Git"/>
<img src="https://img.shields.io/badge/VBA-217346?style=for-the-badge&logo=microsoft-excel&logoColor=white" alt="VBA"/>
</p>

### 🌟 Highlights

- 💼 Currently working at **Canadian Tire Corporation**
- 🚀 Implemented **50+ Knime workflows**
- 💡 Developed multiple **PowerApps** solutions
- 🎓 Graduate from **University of Toronto**
- 📜 Certified **SAFe 5.0 Practitioner**

### 📈 GitHub Stats

<p align="center">
  <img src="https://github-readme-stats.vercel.app/api?username=hritikgandhi&show_icons=true&theme=react" alt="GitHub Stats" />
</p>

<p align="center">
  <img src="https://github-readme-streak-stats.herokuapp.com/?user=hritikgandhi&theme=react" alt="GitHub Streak" />
</p>

### 🤝 Let's Connect!

<p align="left">
<a href="https://linkedin.com/in/hritikgandhi" target="blank"><img align="center" src="https://img.shields.io/badge/LinkedIn-0077B5?style=for-the-badge&logo=linkedin&logoColor=white" alt="hritikgandhi" /></a>
<a href="mailto:hg@hritikgandhi.com"><img align="center" src="https://img.shields.io/badge/Email-D14836?style=for-the-badge&logo=gmail&logoColor=white" alt="Email" /></a>
</p>

---
<p align="center">
  <img src="https://komarev.com/ghpvc/?username=hritikgandhi&label=Profile%20views&color=0e75b6&style=flat" alt="Profile views" />
</p>

================
File: RESUME.MD
================
# Hritik Gandhi
> Process Automation Specialist | Full Stack Developer | PowerPlatform Expert

[Email](mailto:hg@hritikgandhi.com) | [LinkedIn](https://linkedin.com/in/hritikgandhi) | [GitHub](https://github.com/hritikgandhi)

## Professional Summary
Process Automation Specialist with expertise in optimizing business workflows through Knime, PowerAutomate, and PowerApps. Skilled in identifying process bottlenecks and implementing efficient solutions to enhance productivity. Diverse background spanning computer science, business administration, and agile environments.

## Technical Skills

### Core Technologies
- **Process Automation:** PowerApps, PowerAutomate, Knime
- **Development:** JavaScript, TypeScript, Python, HTML/CSS
- **Database:** SQL, Neo4j, Cypher
- **Business Intelligence:** PowerBI, DAX
- **Version Control:** Git
- **Microsoft Stack:** VBA, SharePoint, Azure Data Factory

## Professional Experience

### Process Automation Specialist - Power Platform Developer
**Canadian Tire Corporation** | *Jan 2022 - Present*

- Implemented 50+ Knime workflows for automating file uploads, database updates, and reporting processes
- Architected Azure Data Factory pipelines and stored procedures for optimized data flow management
- Developed 3 PowerApps solutions including CRM and task management applications
- Created PowerAutomate workflows for RPA automation in both desktop and web environments
- Built interactive PowerBI reports with row-level security implementation
- Automated Excel processes using VBA for enhanced operational efficiency

### Full Stack Web Developer
**Millennial Pod** | *Jan 2022 - Present*

- Designed and implemented RESTful API services using Python
- Developed front-end solutions using React.js and modern JavaScript
- Managed Linux VPS deployment including CRON jobs for system automation
- Integrated MySQL database systems for robust data storage
- Conducted comprehensive API testing using Postman

### API Scrum Developer (Co-curricular)
**African Impact Challenge** | *Jan 2021 - Dec 2021*

- Developed website backend using Python Flask and Java applets
- Implemented graph database architecture using Neo4j and Cypher
- Created RESTful APIs for seamless front-end integration
- Collaborated in an Agile development environment

### Machine Learning Developer (Co-curricular)
**University of Toronto** | *Jan 2021 - Dec 2021*

- Built CLI-based image recognition application with 95% accuracy rate
- Utilized C/C++ for core application development
- Implemented solution in Linux environment

## Education

### University of Toronto
**Bachelor's Degree in Management and Information Technology**
- Specialization in Information Technology
- Focus on business process optimization and software development

## Certifications

- SAFe 5.0 Practitioner
- SAFe Practice Consultant

## Technical Proficiencies

```
Process Automation  : ████████████████████  100%
Full Stack Dev     : ███████████████████░   95%
PowerPlatform      : ████████████████████   100%
Database Design    : ██████████████████░░   90%
Business Analysis  : ███████████████████░   95%
```

---
*References available upon request*
